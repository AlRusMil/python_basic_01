"""
Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.

Проверить работу исключения на реальном примере.
Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя,
например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его
в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее
сообщение. При этом работа скрипта не должна завершаться.
"""


class InvalidData(Exception):

    def __init__(self, text, invalid):
        self.text = text
        self.invalid = invalid

    @staticmethod
    def is_number(data: str) -> bool:
        try:
            float(data)
            return True
        except ValueError:
            return False

    @staticmethod
    def safe_append(data: str):
        if not InvalidData.is_number(data):
            raise InvalidData('Введено не число!', data)
        else:
            return data


result_list = []

print('Вводите числа по одному! Если хотите прекратить работу, то введите слово "stop".')
data = input('Введите число: ')
while data != 'stop':
    try:
        result_list.append(float(InvalidData.safe_append(data)))
    except InvalidData as ind:
        print(f'{ind.args[0]} Были введены следующие некорректные данные: {ind.args[1]}')
        continue
    finally:
        data = input('Введите число: ')

print('Работа программы завершена. Результирующий список:')
print(result_list)
